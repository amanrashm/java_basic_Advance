Recursion
// java code
class Solution {
    public int maxDepth(TreeNode root) {
        if(root == null) return 0;
        int left = maxDepth(root.left) + 1;
        int right = maxDepth(root.right) + 1;
        return Math.max(left, right);
    }
}

example 2: Maximum Depth of N-ary Tree
// java code
class Solution {
    public int maxDepth(Node root) {
        if(root == null) return 0;
        int max = 0;
        for(Node child : root.children){
            max = Math.max(max, maxDepth(child));
        }
        return max + 1;
    }
}

temp / 10 convert
into right shift
temp % 10 into left shift
// java code
class Solution {
    public int reverse(int x) {
        int temp = 0;
        while(x != 0){
            int pop = x % 10;
            x /= 10;
            if(temp > Integer.MAX_VALUE / 10 || (temp == Integer.MAX_VALUE / 10 && pop > 7)) return 0;
            if(temp < Integer.MIN_VALUE / 10 || (temp == Integer.MIN_VALUE / 10 && pop < -8)) return 0;
            temp = temp * 10 + pop;
        }
        return temp;
    }
}